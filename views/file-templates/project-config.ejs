/* Magnet Mobile App Project Profile created by {{-user.firstName}} {{-user.lastName}} on {{-date}} */
GROUP_ID="com.magnetapi.apps.{{=settings.groupId}}"
VERSION="{{=settings.version}}"
PACKAGE="com.magnetapi.apps.{{=settings.groupId}}"
project.groupId=GROUP_ID
project.artifactId="{{=settings.artifactId}}"
project.version=VERSION
project._package=PACKAGE
project.type="logic"
project.appVersion="{{=settings.version}}"
project.userAuth="{{=settings.userAuth}}"{{ if(settings.jdbcAppEnabled){ }}
project.jdbcAppDBName="{{=settings.jdbcAppDBName}}"
project.jdbcAppUsername="{{=settings.jdbcAppUsername}}"
project.jdbcAppPassword="{{=settings.jdbcAppPassword}}"{{ } }}
project.jdbcSystemDBName="{{=sysDBId}}"
project.jdbcSystemUsername="{{=settings.jdbcSystemUsername}}"
project.jdbcSystemPassword="{{=settings.jdbcSystemPassword}}"
project.jdbcHost="{{=settings.jdbcHost}}"
project.jdbcPort="{{=settings.jdbcPort}}"
project.jdbcAppEnabled={{=settings.jdbcAppEnabled}}
project.useGeoLocation={{=settings.useGeoLocation}}
client.enabled=true
client.enableDataEncryption={{=settings.encryptionEnabled}}{{ if(settings.salesforceEnabled){ }}
project.salesforceEnabled={{=settings.salesforceEnabled}}
include(SalesforceControllerDefaults)
server.config.SFDCOAuthConfig.clientSecret="{{=settings.sfdcClientSecret}}"
server.config.SFDCOAuthConfig.clientId="{{=settings.sfdcClientId}}"
server.config.SforceSoapPort.endpointAddress="{{=settings.sfdcClientEndpointAddress}}"
server.config.SforceSoapPort.__name="SoapPort-sforce.cproperties"{{ } }}{{ if(settings.facebookEnabled){ }}
project.facebookEnabled={{=settings.facebookEnabled}}
include(FacebookControllerDefaults)
server.config.FBOAuthConfig.clientId="{{=settings.fbClientId}}"
server.config.FBOAuthConfig.clientSecret="{{=settings.fbClientSecret}}"{{ } }}{{ if(settings.linkedinEnabled){ }}
project.linkedinEnabled={{=settings.linkedinEnabled}}
include(LinkedInControllerDefaults)
server.config.LNKDINOAuthConfig.clientSecret="{{=settings.liClientSecret}}"
server.config.LNKDINOAuthConfig.clientId="{{=settings.liClientId}}"{{ } }}{{ if(settings.helloWorldControllerEnabled){ }}
project.helloWorldControllerEnabled={{=settings.helloWorldControllerEnabled}}
include(HelloWorldControllerDefaults)
controllers.helloworld.groupId=GROUP_ID
controllers.helloworld.version=VERSION{{ } }}{{ if(settings.helloWorldControllerDBEnabled){ }}
include(HelloWorldEntityControllerDefaults){{ } }}{{ if(settings.gcmEnabled){ }}
project.gcmEnabled={{=settings.gcmEnabled}}
server.config.GcmAccount.enabled={{=settings.gcmEnabled}}
server.config.GcmAccount.apiKey="{{=settings.gcmApiKey}}"
client.gcmSenderId="{{=settings.gcmSenderId}}"{{ } }}{{ if(settings.apnsEnabled){ }}
project.apnsEnabled={{=settings.apnsEnabled}}
server.config.ApnsAccount.enabled={{=settings.apnsEnabled}}
server.config.ApnsAccount.password="{{=settings.apnsPassword}}"
server.config.ApnsAccount.host="{{=settings.apnsHost}}"{{ if(settings.apnsCertName){ }}
server.config.ApnsAccount.certFile="{{=settings.apnsCertName}}"
server.config.__fileMap=["{{=settings.apnsCertName}}" : "{{=settings.apnsCertName}}"]{{ } }}{{ } }}{{ if(settings.emailEnabled){ }}
project.emailEnabled={{=settings.emailEnabled}}
server.config.SmtpConfig.Host="{{=settings.smtpHostName}}"
server.config.SmtpConfig.Port={{=settings.smtpPort}}
server.config.SmtpConfig.Username="{{=settings.smtpUsername}}"
server.config.SmtpConfig.Password="{{=settings.smtpPassword}}"
server.config.SmtpConfig.SenderName="{{=settings.smtpSenderName}}"
server.config.SmtpConfig.SenderEmail="{{=settings.smtpSenderEmail}}"{{ } }}{{ for(var i=0;i<wsdls.length;++i){ }}
controllers.{{= wsdls[i].serviceName }}.groupId="com.magnetapi.apps.{{=settings.groupId}}"
controllers.{{= wsdls[i].serviceName }}.version="{{=settings.version}}"
controllers.{{= wsdls[i].serviceName }}._package="com.magnetapi.apps.{{=settings.groupId}}.{{= wsdls[i].serviceName }}"
controllers.{{= wsdls[i].serviceName }}.type="{{= wsdls[i].bindStyle }}"
controllers.{{= wsdls[i].serviceName }}.artifactId="{{= wsdls[i].serviceName }}"
controllers.{{= wsdls[i].serviceName }}.wsdl="{{= wsdls[i].url }}"
controllers.{{= wsdls[i].serviceName }}.serviceName="{{= wsdls[i].serviceName }}"{{ } }}